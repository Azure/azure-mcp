<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <CliName>azmcp</CliName>
    <AssemblyName>$(CliName)</AssemblyName>
    <AssemblyTitle>Azure MCP Server</AssemblyTitle>
    <!-- Publishing settings -->
    <IsAotCompatible>true</IsAotCompatible>
    <PublishSingleFile>false</PublishSingleFile>
    <SelfContained>false</SelfContained>
    <PublishReadyToRun>false</PublishReadyToRun>
    <PublishTrimmed>false</PublishTrimmed>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <DebugType>embedded</DebugType>
  </PropertyGroup>
  <PropertyGroup>
    <!-- AOT compilation flags -->
    <IlcFoldIdenticalMethodBodies>true</IlcFoldIdenticalMethodBodies>
    <CopyOutputSymbolsToPublishDirectory>false</CopyOutputSymbolsToPublishDirectory>
    <!-- Multi-platform support -->
    <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
  </PropertyGroup>
  <!-- .NET Tool Package settings -->
  <PropertyGroup>
    <!-- Bug in 10p6: if this is set to true it prevents 'normal' publishes
         from generating apphosts. Workaround: set -p PackAsTool=true when
         calling 'dotnet pack'.
         See https://github.com/dotnet/sdk/issues/49799 for details. -->
    <!-- <PackAsTool>true</PackAsTool> -->
    <PackageType>McpServer</PackageType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>azure;mcp;</PackageTags>
    <PackageReleaseNotes>$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)/../CHANGELOG.md').TrimEnd())</PackageReleaseNotes>
    <ToolCommandName>$(CliName)</ToolCommandName>
    <PackageDescription>this is an awesome thing for awesome people</PackageDescription>
  </PropertyGroup>
  <!-- Debug configuration -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <PublishSingleFile>false</PublishSingleFile>
    <SelfContained>false</SelfContained>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\AzureMcp.Core\AzureMcp.Core.csproj" />
    <ProjectReference Include="..\..\..\areas\*\src\**\AzureMcp.*.csproj" />
  </ItemGroup>
  <ItemGroup>
    <!-- We need a package reference for Cosmos so we have a path to the native assets for exclusion later -->
    <PackageReference Include="Microsoft.Azure.Cosmos" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="ModelContextProtocol" />
    <PackageReference Include="System.CommandLine" />
  </ItemGroup>
  <ItemGroup>
  <!-- Tool package content -->
  <ItemGroup>
    <None Include="../../README.md" Pack="true" PackagePath="" />
    <None Include="./server.json" Pack="true" PackagePath=".mcp/" />
  </ItemGroup>

  <!-- Remove Cosmos native files from the build output directory -->
  <Target Name="RemoveCosmosNativeFiles" BeforeTargets="GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <FilesToRemove Include="@(ContentWithTargetPath)" Condition="$([System.String]::new('%(FullPath)').Contains('$(PkgMicrosoft_Azure_Cosmos)'))" />
    </ItemGroup>
    <ItemGroup>
      <ContentWithTargetPath Remove="@(FilesToRemove)" />
    </ItemGroup>
  </Target>
</Project>
