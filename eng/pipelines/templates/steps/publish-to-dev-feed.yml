parameters:
  - name: PathToArtifacts
    type: string
  - name: Registry
    type: string
  - name: Tag
    type: string

steps:
  - template: /eng/common/pipelines/templates/steps/set-default-branch.yml

  - template: /eng/common/pipelines/templates/steps/create-authenticated-npmrc.yml
    parameters:
      npmrcPath: ${{parameters.PathToArtifacts}}/.npmrc
      registryUrl: ${{parameters.Registry}}

  - pwsh: |
      $platformFiles = Get-ChildItem -Path ./platform -Filter *.tgz
      $wrapperFiles = Get-ChildItem -Path ./wrapper -Filter *.tgz
      $tgzFiles = $platformFiles + $wrapperFiles
      
      if ($tgzFiles.Count -eq 0) {
        Write-Host "No .tgz files found in ${{parameters.PathToArtifacts}}"
        exit 1
      }

      Write-Host "Publishing the following files to ${{parameters.Registry}}:"
      foreach ($file in $tgzFiles) {
        Write-Host "  - $($file.FullName)"
      }

      $tag = '${{parameters.Tag}}'
      foreach ($file in $tgzFiles) {
        $command = "npm publish '$file' --access public --tag '$tag'"
        Write-Host "> $command"
        Invoke-Expression $command
        if (!$?) {
          exit 1
        }
      }
    displayName: Publish packages to dev feed
    workingDirectory: ${{parameters.PathToArtifacts}}

  - pwsh: |
      $markdown = @"
      To run the dev version of the package, you can use the following command:
      ``````bash
      npx --yes --registry '${{parameters.Registry}}' @azure/mcp@$(Version) --version
      ``````

      You can also globally install the package and run it like:
      ``````bash
      npm install --registry '${{parameters.Registry}}' -g @azure/mcp@$(Version)

      azmcp --version
      ``````

      ## mcp.json

      Configure the server in ``.vscode/mcp.json`` with:
      ``````json
      {
        "servers": {
          "Azure MCP Server": {
            "command": "npx",
            "args": [
              "-y",
              "--registry",
              "${{parameters.Registry}}",
              "@azure/mcp@$(Version)",
              "server",
              "start"
            ]
          }
        }
      }
      ``````
      "@
      
      New-Item '$(Pipeline.Workspace)/.work' -ItemType Directory -Force | Out-Null
      $path = '$(Pipeline.Workspace)/.work/Usage.md'

      $markdown | Out-File -FilePath $path -Encoding utf8
      Write-Host "##vso[task.uploadsummary]$path"
    displayName: "Document dev version usage"
