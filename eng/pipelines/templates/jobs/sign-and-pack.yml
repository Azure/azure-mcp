parameters:
- name: TimeoutInMinutes
  type: number
  default: 120

jobs:
- job: SignAndPack
  displayName: "Sign and Pack"
  timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
  pool: # Binary signing of mac bits needs to happen on mac see https://github.com/Azure/azure-mcp/blob/4ff032fafc77bc618738879b7028665c0de2e632/eng/scripts/Compress-ForSigning.ps1#L40
    name: $(MACPOOL)
    vmImage: $(MACVMIMAGE)
    os: macos
  steps:
  - checkout: self

  - download: current
    patterns: |
      $(PipelineArtifactName)_*/dotnet/**
    path: $(Pipeline.Workspace)/dotnet
    displayName: Download dotnet artifacts

  - download: current
    patterns: |
      $(PipelineArtifactName)_*/native/**
    path: $(Pipeline.Workspace)/native
    displayName: Download native artifacts

  - task: Powershell@2
    displayName: "Show Pipeline.Workspace directory structure"
    inputs:
      pwsh: true
      targetType: inline
      script: |
        Write-Host "Pipeline.Workspace directory structure (4 levels deep):"
        Get-ChildItem -Path '$(Pipeline.Workspace)' -Recurse -Depth 4 | 
          Sort-Object FullName | 
          ForEach-Object {
            $indent = "  " * (($_.FullName.Split([IO.Path]::DirectorySeparatorChar).Count) - (('$(Pipeline.Workspace)'.Split([IO.Path]::DirectorySeparatorChar).Count)))
            if ($_.PSIsContainer) {
              Write-Host "$indent$($_.Name)/" -ForegroundColor Cyan
            } else {
              $sizeInfo = if ($_.Length -gt 1MB) { " ({0:F1} MB)" -f ($_.Length / 1MB) } 
                         elseif ($_.Length -gt 1KB) { " ({0:F1} KB)" -f ($_.Length / 1KB) } 
                         else { " ($($_.Length) bytes)" }
              Write-Host "$indent$($_.Name)$sizeInfo" -ForegroundColor White
            }
          }

  - task: Powershell@2
    displayName: "Compress packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Compress-ForSigning.ps1
      arguments: >
        -ArtifactsPath '$(Pipeline.Workspace)/dotnet'
        -ArtifactPrefix '$(PipelineArtifactName)_'
        -OutputPath '$(Build.ArtifactStagingDirectory)/signed/dotnet'

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-230012' # MS Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed/dotnet
      BinaryPattern: |
        win-*/**/azmcp.dll
        win-*/**/azmcp.exe
        win-*/**/AzureMcp*.dll

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-231522' # MS 3rd Party Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed/dotnet
      BinaryPattern: |
        win-*/**/ModelContextProtocol*.dll
        win-*/**/Npgsql.dll
        win-*/**/OpenAI.dll
        win-*/**/OpenTelemetry*.dll
        win-*/**/YamlDotNet.dll

  - template: pipelines/steps/azd-cli-mac-signing.yml@azure-sdk-build-tools
    parameters:
      MacPath: $(Build.ArtifactStagingDirectory)/signed/dotnet
      MacPattern: "**/*.zip"

  - task: Powershell@2
    displayName: "Expand packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Expand-AfterSigning.ps1
      arguments: >
        -Path '$(Build.ArtifactStagingDirectory)/signed/dotnet'

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/signed/dotnet
      ArtifactName: $(PipelineArtifactName)_signed
      SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

  - task: Powershell@2
    displayName: "Compress packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Compress-ForSigning.ps1
      arguments: >
        -ArtifactsPath '$(Pipeline.Workspace)/native'
        -ArtifactPrefix '$(PipelineArtifactName)_'
        -OutputPath '$(Build.ArtifactStagingDirectory)/signed/native'

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-230012' # MS Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed/native
      BinaryPattern: |
        win-*/**/azmcp.dll
        win-*/**/azmcp.exe
        win-*/**/AzureMcp*.dll

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-231522' # MS 3rd Party Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed/native
      BinaryPattern: |
        win-*/**/ModelContextProtocol*.dll
        win-*/**/Npgsql.dll
        win-*/**/OpenAI.dll
        win-*/**/OpenTelemetry*.dll
        win-*/**/YamlDotNet.dll

  - template: pipelines/steps/azd-cli-mac-signing.yml@azure-sdk-build-tools
    parameters:
      MacPath: $(Build.ArtifactStagingDirectory)/signed/native
      MacPattern: "**/*.zip"

  - task: Powershell@2
    displayName: "Expand packages"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Expand-AfterSigning.ps1
      arguments: >
        -Path '$(Build.ArtifactStagingDirectory)/signed/native'

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/signed/native
      ArtifactName: $(PipelineArtifactName)_signed
      SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

  - task: Powershell@2
    displayName: "Pack modules"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Pack-Modules.ps1
      arguments: >
        -ArtifactsPath '$(Build.ArtifactStagingDirectory)/signed/dotnet'
        -OutputPath '$(Build.ArtifactStagingDirectory)/packed/dotnet'
        -Version '$(Version)'

  - task: Powershell@2
    displayName: "(Native) Pack modules"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Pack-Modules.ps1
      arguments: >
        -ArtifactsPath '$(Build.ArtifactStagingDirectory)/signed/native'
        -OutputPath '$(Build.ArtifactStagingDirectory)/packed/native'
        -Version '$(Version)'
        -BuildNative

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/packed
      ArtifactName: $(PipelineArtifactName)_packed
      SbomEnabled: ${{ ne(variables['Build.Reason'], 'PullRequest') }}
