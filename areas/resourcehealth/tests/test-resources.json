{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "18104356964510299702"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "minLength": 3,
      "maxLength": 17,
      "metadata": {
        "description": "The base resource name. Service names have specific length restrictions."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "defaultValue": "[deployer().objectId]",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resource. By default, this is the same as the resource group."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[take(format('{0}rh{1}', parameters('baseName'), uniqueString(resourceGroup().id)), 24)]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-06-01",
      "name": "[format('{0}-rh-vnet', parameters('baseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-06-01",
      "name": "[format('{0}-rh-nic', parameters('baseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-rh-vnet', parameters('baseName'))), '2023-06-01').subnets[0].id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-rh-vnet', parameters('baseName')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-rh-vm', parameters('baseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B1s"
        },
        "osProfile": {
          "computerName": "[format('{0}rhvm', parameters('baseName'))]",
          "adminUsername": "azureadmin",
          "adminPassword": "P@ssw0rd123!",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-rh-nic', parameters('baseName')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-rh-nic', parameters('baseName')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7'), parameters('testApplicationOid'), resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[parameters('testApplicationOid')]",
        "principalType": "ServicePrincipal"
      }
    }
  ],
  "outputs": {
    "testStorageAccountName": {
      "type": "string",
      "value": "[take(format('{0}rh{1}', parameters('baseName'), uniqueString(resourceGroup().id)), 24)]"
    },
    "testStorageAccountResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', take(format('{0}rh{1}', parameters('baseName'), uniqueString(resourceGroup().id)), 24))]"
    },
    "testVirtualMachineName": {
      "type": "string",
      "value": "[format('{0}-rh-vm', parameters('baseName'))]"
    },
    "testVirtualMachineResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-rh-vm', parameters('baseName')))]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}